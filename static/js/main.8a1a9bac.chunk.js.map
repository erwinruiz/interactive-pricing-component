{"version":3,"sources":["Components/Main.module.css","Components/Header.tsx","Components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx","Components/Header.module.css"],"names":["module","exports","Header","pageviews","price","className","classes","header","currentProgress","Main","useState","userInput","setUserInput","isBillingYearly","setIsBillingYearly","main","type","min","max","defaultValue","toString","onChange","e","target","value","style","width","toFixed","switch","state","slider","round","discount","features","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,gBAAgB,4BAA4B,UAAY,wBAAwB,wBAAwB,oCAAoC,cAAc,0BAA0B,eAAe,2BAA2B,MAAQ,oBAAoB,kBAAkB,8BAA8B,OAAS,qBAAqB,OAAS,qBAAqB,MAAQ,oBAAoB,SAAW,uBAAuB,kBAAkB,8BAA8B,iBAAiB,6BAA6B,SAAW,yB,+HCY1iBC,ICVXC,EACFC,EDSaF,EAXf,WACE,OACE,yBAAQG,UAAWC,IAAQC,OAA3B,UACE,+DACA,+DACgC,mE,uBCFpCC,EAAkB,GAgILC,MA9Hf,WACE,MAAkCC,mBAAiB,KAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CF,oBAAkB,GAAhE,mBAAOG,EAAP,KAAwBC,EAAxB,KAUA,OAAQH,GACN,IAAK,IACHR,EAAY,MACZK,EAAkB,EAEhBJ,EADES,EACM,EAEA,EAEV,MAEF,IAAK,IACHV,EAAY,MACZK,EAAkB,GAEhBJ,EADES,EACM,EAEA,GAEV,MAEF,IAAK,IACHV,EAAY,OACZK,EAAkB,GAEhBJ,EADES,EACM,GAEA,GAEV,MAEF,IAAK,IACHV,EAAY,OACZK,EAAkB,GAEhBJ,EADES,EACM,GAEA,GAEV,MAEF,IAAK,IACHV,EAAY,KACZK,EAAkB,IAEhBJ,EADES,EACM,GAEA,GAEV,MAEF,QACEV,EAAY,IACZC,EAAQ,GAGZ,OACE,uBAAMC,UAAWC,IAAQS,KAAzB,UACE,sBAAKV,UAAWC,IAAQ,iBAAxB,UACE,oBAAGD,UAAWC,IAAQH,UAAtB,UAAkCA,EAAlC,gBACA,sBAAKE,UAAWC,IAAQ,yBAAxB,UACE,uBACED,UAAWC,IAAQ,eACnBU,KAAK,QACLC,IAAI,IACJC,IAAI,IACJC,aAAcR,EAAUS,WACxBC,SA3Ee,SAACC,GACxBV,EAAaU,EAAEC,OAAOC,UA4EhB,qBACEnB,UAAWC,IAAQ,gBACnBmB,MAAO,CAAEC,MAAM,GAAD,OAAKlB,EAAL,WAGlB,oBAAGH,UAAWC,IAAQF,MAAtB,cACIA,EAAMuB,QAAQ,GAChB,+CAEF,sBAAKtB,UAAWC,IAAQ,mBAAxB,UACE,gDACA,wBAAOD,UAAWC,IAAQsB,OAA1B,UACE,uBAAOZ,KAAK,WAAWK,SArFH,WAC5BP,GAAmB,SAACe,GAAD,OAAYA,QAqFvB,sBAAMxB,UAAS,UAAKC,IAAQwB,OAAb,YAAuBxB,IAAQyB,YAEhD,+CACA,qBAAK1B,UAAWC,IAAQ0B,SAAxB,SACE,qCACM,uDAKZ,qBAAK3B,UAAWC,IAAQ,qBACxB,sBAAKD,UAAWC,IAAQ,kBAAxB,UACE,sBAAKD,UAAWC,IAAQ2B,SAAxB,UACE,gCACE,qBAAKC,IAAI,0BAA0BC,IAAI,eACvC,sDAEF,gCACE,qBAAKD,IAAI,0BAA0BC,IAAI,eACvC,uDAEF,gCACE,qBAAKD,IAAI,0BAA0BC,IAAI,eACvC,oDAGJ,2DClHOC,MATf,WACE,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCMSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfArC,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.8a1a9bac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__QAuDI\",\"first-section\":\"Main_first-section__1U_KC\",\"pageviews\":\"Main_pageviews__GHjRY\",\"input-range-container\":\"Main_input-range-container__3dzRf\",\"input-range\":\"Main_input-range__2fXlm\",\"progress-bar\":\"Main_progress-bar__1kD9s\",\"price\":\"Main_price__2XHli\",\"billing-options\":\"Main_billing-options__39dbx\",\"switch\":\"Main_switch___pO2j\",\"slider\":\"Main_slider__3_4EW\",\"round\":\"Main_round__1Zt7q\",\"discount\":\"Main_discount__RS55T\",\"horizontal-line\":\"Main_horizontal-line__35RY6\",\"second-section\":\"Main_second-section__wPegG\",\"features\":\"Main_features__5hM5a\"};","import classes from \"./Header.module.css\";\n\nfunction Header() {\n  return (\n    <header className={classes.header}>\n      <h1>Simple, traffic-based pricing</h1>\n      <p>\n        Sign-up for our 30-day trial. <span>No credit card required.</span>\n      </p>\n    </header>\n  );\n}\n\nexport default Header;\n","import classes from \"./Main.module.css\";\nimport { ChangeEvent, useState } from \"react\";\n\nlet pageviews,\n  price,\n  currentProgress = 50;\n\nfunction Main() {\n  const [userInput, setUserInput] = useState<string>(\"3\");\n  const [isBillingYearly, setIsBillingYearly] = useState<Boolean>(false);\n\n  const userInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setUserInput(e.target.value);\n  };\n\n  const billingOptionsHandler = () => {\n    setIsBillingYearly((state) => !state);\n  };\n\n  switch (userInput) {\n    case \"1\":\n      pageviews = \"10k\";\n      currentProgress = 0;\n      if (isBillingYearly) {\n        price = 8 - 8 * 0.25;\n      } else {\n        price = 8;\n      }\n      break;\n\n    case \"2\":\n      pageviews = \"50k\";\n      currentProgress = 25;\n      if (isBillingYearly) {\n        price = 12 - 12 * 0.25;\n      } else {\n        price = 12;\n      }\n      break;\n\n    case \"3\":\n      pageviews = \"100k\";\n      currentProgress = 50;\n      if (isBillingYearly) {\n        price = 16 - 16 * 0.25;\n      } else {\n        price = 16;\n      }\n      break;\n\n    case \"4\":\n      pageviews = \"500k\";\n      currentProgress = 75;\n      if (isBillingYearly) {\n        price = 24 - 24 * 0.25;\n      } else {\n        price = 24;\n      }\n      break;\n\n    case \"5\":\n      pageviews = \"1m\";\n      currentProgress = 100;\n      if (isBillingYearly) {\n        price = 36 - 36 * 0.25;\n      } else {\n        price = 36;\n      }\n      break;\n\n    default:\n      pageviews = 100;\n      price = 16;\n  }\n\n  return (\n    <main className={classes.main}>\n      <div className={classes[\"first-section\"]}>\n        <p className={classes.pageviews}>{pageviews} Pageviews</p>\n        <div className={classes[\"input-range-container\"]}>\n          <input\n            className={classes[\"input-range\"]}\n            type=\"range\"\n            min=\"1\"\n            max=\"5\"\n            defaultValue={userInput.toString()}\n            onChange={userInputHandler}\n          />\n          <div\n            className={classes[\"progress-bar\"]}\n            style={{ width: `${currentProgress}%` }}\n          />\n        </div>\n        <p className={classes.price}>\n          ${price.toFixed(2)}\n          <span> / month</span>\n        </p>\n        <div className={classes[\"billing-options\"]}>\n          <p>Monthly Billing</p>\n          <label className={classes.switch}>\n            <input type=\"checkbox\" onChange={billingOptionsHandler} />\n            <span className={`${classes.slider} ${classes.round}`}></span>\n          </label>\n          <p>Yearly Billing</p>\n          <div className={classes.discount}>\n            <p>\n              25% <span>discount</span>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className={classes[\"horizontal-line\"]} />\n      <div className={classes[\"second-section\"]}>\n        <div className={classes.features}>\n          <div>\n            <img src=\"./images/icon-check.svg\" alt=\"check icon\" />\n            <p>Unlimited websites</p>\n          </div>\n          <div>\n            <img src=\"./images/icon-check.svg\" alt=\"check icon\" />\n            <p>100% data ownership</p>\n          </div>\n          <div>\n            <img src=\"./images/icon-check.svg\" alt=\"check icon\" />\n            <p>Email reports</p>\n          </div>\n        </div>\n        <button>Start my trial</button>\n      </div>\n    </main>\n  );\n}\n\nexport default Main;\n","import { Fragment } from \"react\";\nimport Header from \"./Components/Header\";\nimport Main from \"./Components/Main\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Header />\n      <Main />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2fIN1\"};"],"sourceRoot":""}